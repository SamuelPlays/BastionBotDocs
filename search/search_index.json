{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction # Welcome to The Bastion Bot Documentation Site. Here you\u2019ll find documentation on how to install, set up, run and update Bastion, so that you can empower your Discord server and have an awesome bot for your communities. All of our documentation is on GitHub and we would corrections and improvements! To start reading the documentation you can either click Next at the bottom right corner, or click here . Come hang out in our official Discord server if you wanna chat with other users, as well as the devs, and see what\u2019s being cranked out. We look forward to seeing you make your Discord server AMAZING! You\u2019ve been invited to join The Bastion Bot be awesome! Join","title":"Intro"},{"location":"#introduction","text":"Welcome to The Bastion Bot Documentation Site. Here you\u2019ll find documentation on how to install, set up, run and update Bastion, so that you can empower your Discord server and have an awesome bot for your communities. All of our documentation is on GitHub and we would corrections and improvements! To start reading the documentation you can either click Next at the bottom right corner, or click here . Come hang out in our official Discord server if you wanna chat with other users, as well as the devs, and see what\u2019s being cranked out. We look forward to seeing you make your Discord server AMAZING! You\u2019ve been invited to join The Bastion Bot be awesome! Join","title":"Introduction"},{"location":"api-keys/","text":"Tip All the API Keys are optional, and are only required by specific commands, that\u2019s mentioned in the specific sections. If you do not wish to use any of those commands (yet) you can skip that section or this entire section and can come back here later when you want those. Note When you get/receive an API key from any of the sections below, keep those keys/tokens/IDs in a file in your local computer where it\u2019s safe and easy to access. You are going to need these keys when you are configuring Bastion after the installation. Google API Key # Required by maps and shorten commands. Go to the Google API Console . Create a new project , name it anything you like. Once the project is created, click on Enable APIs . Now, enable Google Static Maps API and URL Shortener API . On the left tab, click Credentials . Then click Create Credentials button. Now click on API Key . A window will popup with your Google API key. GitHub API Key # Required by contributors command. It would still work without it, but it\u2019s limited to 60 requests per hour. Go to the GitHub Developer Settings > Personal Access Tokens . Click on Generate new token . Write Bastion Bot (or anything you like) in the Token Description . In the Select scopes section, deselect everything. Bastion doesn\u2019t need to access any scopes, so it\u2019s better not to select any. Then click on Generate token button at the bottom to generate your new token. Copy the new token and keep it somewhere safe, as you won\u2019t be able to see it again for security reasons. Patreon API Key # Required by patrons command. Go to the Patreon Client Registration . Click on the Create Client button. Fill up the details as applicable, and click on the Create Client button at the bottom. Now that your client is registered, you\u2019ll see the required credentials listed under your client. Bungie API Key # Required by destiny2 command. Go to Bungie Applications . Login/Register your account. After you\u2019ve (registered and) logged in, click on Create New App . Fill up the given form with your name, website (you can also use https://bastionbot.org ) and select the OAuth client type to Not Applicable . Then if you agree to their Terms of Use, click on Create New App . Then you\u2019ll see your API Key under the API Keys section. PUBG API Key # Required by pubg command. Go to PlayerUnknown\u2019s Battlegrounds Developer Portal . Login/Register your account (Click MY APPS at the top right corner). After you\u2019ve (registered and) logged in, click on Register a New App . Fill up the given form with the asked details like your name, app\u2019s name (Bastion), website (you can also use https://bastionbot.org ), description, etc. After you\u2019ve registered a new application, you\u2019ll get your API Key . Battlefield API Key # Required by battlefield1 and battlefield4 commands. Go to Battlefield Tracer Network Site . Login/Register your account (Click Login/Register at the top right corner). After you\u2019ve (registered and) logged in, click on Generate API key . Fill up the given form with your name, email, website (you can also use https://bastionbot.org ) and description. After that click on Generate API key . Then you\u2019ll see your API Key under the Authentication section. Fortnite API Key # Required by fortnite command. Go to Fortnite Tracer Network Site . Login/Register your account (Click Login/Register at the top right corner). After you\u2019ve (registered and) logged in, click on Generate API key . Fill up the given form with your name, email, website (you can also use https://bastionbot.org ) and description. After that click on Generate API key . Then you\u2019ll see your API Key under the Authentication section. HiRez API Key # Required by paladins and smite commands. Fill up the Hi-Rez Developer Credentials Application Form with correct details. Then submit it. After HiRez Studios have verified you, they will mail you with your HiRez DevId & AuthKey . Note It generally takes few hours for them you mail you, so you can proceed with the installation, as you can add these to your credentials.json file anytime later. Twitch API Key # Required by streamers and twitch commands. Read this article on How to get Twitch API Client ID & Client Secret . Rocket League API Key # Required by rocketLeague command. Rocket League\u2019s API is currently in closed beta. So, you can\u2019t request an API key yet. Therefore, you can\u2019t use this command yet. Only a selected few have access their API. And Bastion is one of them, so the public Bastion bot can make use of the rocketLeague command. As soon as they allow public access to their API, you can request an API key and use the rocketLeague command in your self hosted Bastion. Musixmatch API Key # Required by lyrics command. Visit Musixmatch Developer site and signup for a new accout (or signin if you already have one). When all the signup steps are completed, you\u2019ll get your Musixmatch API key. The Movie DB API Key # Required by movie and tvShow commands. Read The Movie Database FAQ to know how to get their API Key. IGDB API Key # Required by game command. Visit the IGDB API Plans page . Signup for the plan as per your requirements. The Free plan should be enough though. After you\u2019ve successfully signed up, you\u2019ll see your API Key in the credentials section of the page. Battle.net API Key # Required by wow command. Visit the Battle.net Developer Portal . Login/Register your account (Click Login/Register at the top right corner). After you\u2019ve (registered and) logged in, click on Get API Keys . Fill in the form with your details. You don\u2019t need to worry about the callback URL, but make sure you select World of Warcraft in the franchises dropdown. The basic plan should be adequate. After that click on Register Application . Then you\u2019ll see your API Key under the Keys section.","title":"Get API Keys"},{"location":"api-keys/#google-api-key","text":"Required by maps and shorten commands. Go to the Google API Console . Create a new project , name it anything you like. Once the project is created, click on Enable APIs . Now, enable Google Static Maps API and URL Shortener API . On the left tab, click Credentials . Then click Create Credentials button. Now click on API Key . A window will popup with your Google API key.","title":"Google API Key"},{"location":"api-keys/#github-api-key","text":"Required by contributors command. It would still work without it, but it\u2019s limited to 60 requests per hour. Go to the GitHub Developer Settings > Personal Access Tokens . Click on Generate new token . Write Bastion Bot (or anything you like) in the Token Description . In the Select scopes section, deselect everything. Bastion doesn\u2019t need to access any scopes, so it\u2019s better not to select any. Then click on Generate token button at the bottom to generate your new token. Copy the new token and keep it somewhere safe, as you won\u2019t be able to see it again for security reasons.","title":"GitHub API Key"},{"location":"api-keys/#patreon-api-key","text":"Required by patrons command. Go to the Patreon Client Registration . Click on the Create Client button. Fill up the details as applicable, and click on the Create Client button at the bottom. Now that your client is registered, you\u2019ll see the required credentials listed under your client.","title":"Patreon API Key"},{"location":"api-keys/#bungie-api-key","text":"Required by destiny2 command. Go to Bungie Applications . Login/Register your account. After you\u2019ve (registered and) logged in, click on Create New App . Fill up the given form with your name, website (you can also use https://bastionbot.org ) and select the OAuth client type to Not Applicable . Then if you agree to their Terms of Use, click on Create New App . Then you\u2019ll see your API Key under the API Keys section.","title":"Bungie API Key"},{"location":"api-keys/#pubg-api-key","text":"Required by pubg command. Go to PlayerUnknown\u2019s Battlegrounds Developer Portal . Login/Register your account (Click MY APPS at the top right corner). After you\u2019ve (registered and) logged in, click on Register a New App . Fill up the given form with the asked details like your name, app\u2019s name (Bastion), website (you can also use https://bastionbot.org ), description, etc. After you\u2019ve registered a new application, you\u2019ll get your API Key .","title":"PUBG API Key"},{"location":"api-keys/#battlefield-api-key","text":"Required by battlefield1 and battlefield4 commands. Go to Battlefield Tracer Network Site . Login/Register your account (Click Login/Register at the top right corner). After you\u2019ve (registered and) logged in, click on Generate API key . Fill up the given form with your name, email, website (you can also use https://bastionbot.org ) and description. After that click on Generate API key . Then you\u2019ll see your API Key under the Authentication section.","title":"Battlefield API Key"},{"location":"api-keys/#fortnite-api-key","text":"Required by fortnite command. Go to Fortnite Tracer Network Site . Login/Register your account (Click Login/Register at the top right corner). After you\u2019ve (registered and) logged in, click on Generate API key . Fill up the given form with your name, email, website (you can also use https://bastionbot.org ) and description. After that click on Generate API key . Then you\u2019ll see your API Key under the Authentication section.","title":"Fortnite API Key"},{"location":"api-keys/#hirez-api-key","text":"Required by paladins and smite commands. Fill up the Hi-Rez Developer Credentials Application Form with correct details. Then submit it. After HiRez Studios have verified you, they will mail you with your HiRez DevId & AuthKey . Note It generally takes few hours for them you mail you, so you can proceed with the installation, as you can add these to your credentials.json file anytime later.","title":"HiRez API Key"},{"location":"api-keys/#twitch-api-key","text":"Required by streamers and twitch commands. Read this article on How to get Twitch API Client ID & Client Secret .","title":"Twitch API Key"},{"location":"api-keys/#rocket-league-api-key","text":"Required by rocketLeague command. Rocket League\u2019s API is currently in closed beta. So, you can\u2019t request an API key yet. Therefore, you can\u2019t use this command yet. Only a selected few have access their API. And Bastion is one of them, so the public Bastion bot can make use of the rocketLeague command. As soon as they allow public access to their API, you can request an API key and use the rocketLeague command in your self hosted Bastion.","title":"Rocket League API Key"},{"location":"api-keys/#musixmatch-api-key","text":"Required by lyrics command. Visit Musixmatch Developer site and signup for a new accout (or signin if you already have one). When all the signup steps are completed, you\u2019ll get your Musixmatch API key.","title":"Musixmatch API Key"},{"location":"api-keys/#the-movie-db-api-key","text":"Required by movie and tvShow commands. Read The Movie Database FAQ to know how to get their API Key.","title":"The Movie DB API Key"},{"location":"api-keys/#igdb-api-key","text":"Required by game command. Visit the IGDB API Plans page . Signup for the plan as per your requirements. The Free plan should be enough though. After you\u2019ve successfully signed up, you\u2019ll see your API Key in the credentials section of the page.","title":"IGDB API Key"},{"location":"api-keys/#battlenet-api-key","text":"Required by wow command. Visit the Battle.net Developer Portal . Login/Register your account (Click Login/Register at the top right corner). After you\u2019ve (registered and) logged in, click on Get API Keys . Fill in the form with your details. You don\u2019t need to worry about the callback URL, but make sure you select World of Warcraft in the franchises dropdown. The basic plan should be adequate. After that click on Register Application . Then you\u2019ll see your API Key under the Keys section.","title":"Battle.net API Key"},{"location":"get-started/","text":"Create Bot App and Invite # Create a Discord Bot Application # Go to Discord Developer Applications Page . Log in with your Discord account. Click on the + New App button. Fill in the App Name (i.e., your bot\u2019s name), add an optional Avatar and Description for your bot. Click on the Create App button. Click on Create a Bot User button and confirm that you want to add a bot to this app. Invite your Bot to Discord # Copy your Bot\u2019s Client ID from your Discord Applications page . Paste your Client ID in the input box below. The either click on Invite button or copy the link in the code block, to invite your Bot to your server. Invite https://discordapp.com/oauth2/authorize?client_id=INSERT_CLIENT_ID_HERE&scope=bot&permissions=2146958591","title":"Get Started"},{"location":"get-started/#create-bot-app-and-invite","text":"","title":"Create Bot App and Invite"},{"location":"get-started/#create-a-discord-bot-application","text":"Go to Discord Developer Applications Page . Log in with your Discord account. Click on the + New App button. Fill in the App Name (i.e., your bot\u2019s name), add an optional Avatar and Description for your bot. Click on the Create App button. Click on Create a Bot User button and confirm that you want to add a bot to this app.","title":"Create a Discord Bot Application"},{"location":"get-started/#invite-your-bot-to-discord","text":"Copy your Bot\u2019s Client ID from your Discord Applications page . Paste your Client ID in the input box below. The either click on Invite button or copy the link in the code block, to invite your Bot to your server. Invite https://discordapp.com/oauth2/authorize?client_id=INSERT_CLIENT_ID_HERE&scope=bot&permissions=2146958591","title":"Invite your Bot to Discord"},{"location":"install-glitch/","text":"Installing Bastion in Glitch # Initial Setup (GitHub) # Before you can install Bastion in Glitch, the following steps needs to be performed: Go to GitHub . Either sign in or sign up for GitHub . Go to Bastion\u2019s repository . Create a fork of Bastion\u2019s repository . Go to the forked repository. It will be in your repositories. Go to Settings , and then click on the Branches tab in the left. Change the default branch from master to stable . Initial Setup (Glitch) # Go to Glitch And then Sign in with GitHub . Then create a New Project in Glitch. It can be of any type. Make your project private before doing anything else so that your credentials are safe from others. If you\u2019re not able to do this, ask around in Bastion HQ and some amazing people will help you out . Click on the Logs button (at the top left corner) in your Glitch project. It will open the log window at the bottom, where you can find the Console button. Click on that and you\u2019ll be redirected to your project\u2019s console. Now, before we install Bastion, we\u2019ll need to clear all files from the default project that was automatically created by Glitch. Run the following command in your project\u2019s console to clean everything up: 1 rm -rf /app/* /app/.* 1 >/dev/null Install Bastion # First of all, we need to clone (copy) Bastion from your forked repository. Run the following command to do that, replacing github_user_name with your GitHub username and bastion_repo_name with the name of the repository you forked (will be Bastion by default) 1 git clone https://github.com/github_user_name/bastion_repo_name.git . For example, my GitHub username is k3rn31p4nic and my forked repository name is Bastion , so I\u2019ll write: 1 git clone https://github.com/k3rn31p4nic/Bastion.git . Bastion will now be imported to Glitch in a few seconds. But, when you go to your project editor, you won\u2019t see it. Why? Because Glitch console doesn\u2019t sync with your project editor automatically. To do that, run the following command: 1 refresh Now when can go back to your project editor, you\u2019ll see that it has been updated. Setup Bastion in Glitch # You\u2019ll see a list of Bastion\u2019s files in the left side in Glitch. Find the settings/config_example.json & settings/credentials_example.json files. Don\u2019t worry. Files are ordered alphabetically. Make a copy of both the files and rename the copies to settings/config.json and settings/credentials.json , respectively. Configure Bastion # Edit the config.json and credentials.json files to make any changes you want. Don\u2019t worry about saving, files are automatically saved! Run Bastion # Bastion will be up and running by now, automatically ! Show your love! If you like Bastion, please consider giving it a on GitHub .","title":"Install on Glitch"},{"location":"install-glitch/#installing-bastion-in-glitch","text":"","title":"Installing Bastion in Glitch"},{"location":"install-glitch/#initial-setup-github","text":"Before you can install Bastion in Glitch, the following steps needs to be performed: Go to GitHub . Either sign in or sign up for GitHub . Go to Bastion\u2019s repository . Create a fork of Bastion\u2019s repository . Go to the forked repository. It will be in your repositories. Go to Settings , and then click on the Branches tab in the left. Change the default branch from master to stable .","title":"Initial Setup (GitHub)"},{"location":"install-glitch/#initial-setup-glitch","text":"Go to Glitch And then Sign in with GitHub . Then create a New Project in Glitch. It can be of any type. Make your project private before doing anything else so that your credentials are safe from others. If you\u2019re not able to do this, ask around in Bastion HQ and some amazing people will help you out . Click on the Logs button (at the top left corner) in your Glitch project. It will open the log window at the bottom, where you can find the Console button. Click on that and you\u2019ll be redirected to your project\u2019s console. Now, before we install Bastion, we\u2019ll need to clear all files from the default project that was automatically created by Glitch. Run the following command in your project\u2019s console to clean everything up: 1 rm -rf /app/* /app/.* 1 >/dev/null","title":"Initial Setup (Glitch)"},{"location":"install-glitch/#install-bastion","text":"First of all, we need to clone (copy) Bastion from your forked repository. Run the following command to do that, replacing github_user_name with your GitHub username and bastion_repo_name with the name of the repository you forked (will be Bastion by default) 1 git clone https://github.com/github_user_name/bastion_repo_name.git . For example, my GitHub username is k3rn31p4nic and my forked repository name is Bastion , so I\u2019ll write: 1 git clone https://github.com/k3rn31p4nic/Bastion.git . Bastion will now be imported to Glitch in a few seconds. But, when you go to your project editor, you won\u2019t see it. Why? Because Glitch console doesn\u2019t sync with your project editor automatically. To do that, run the following command: 1 refresh Now when can go back to your project editor, you\u2019ll see that it has been updated.","title":"Install Bastion"},{"location":"install-glitch/#setup-bastion-in-glitch","text":"You\u2019ll see a list of Bastion\u2019s files in the left side in Glitch. Find the settings/config_example.json & settings/credentials_example.json files. Don\u2019t worry. Files are ordered alphabetically. Make a copy of both the files and rename the copies to settings/config.json and settings/credentials.json , respectively.","title":"Setup Bastion in Glitch"},{"location":"install-glitch/#configure-bastion","text":"Edit the config.json and credentials.json files to make any changes you want. Don\u2019t worry about saving, files are automatically saved!","title":"Configure Bastion"},{"location":"install-glitch/#run-bastion","text":"Bastion will be up and running by now, automatically ! Show your love! If you like Bastion, please consider giving it a on GitHub .","title":"Run Bastion"},{"location":"install-heroku/","text":"Installing Bastion in Heroku # Warning Bastion stores its data in files on disk. Heroku\u2019s Cedar stack has an ephemeral filesystem. Bastion will work with Heroku, but the data will be cleared periodically by Heroku. If you were to use Bastion on Heroku, you would lose your entire data at least once every 24 hours. Prerequisites # Before you can install Bastion in Heroku, you need these in your computer. Install them if you don\u2019t already have it. Git Heroku CLI Step 1: Set up Heroku # Go to Heroku and create a new account (or login, if you already have an account). Open the Command Prompt (Windows) or Terminal (Linux/macOS) and run the following command: 1 heroku login Enter your Heroku credentials as prompted and you will be logged in to Heroku. Step 2: Install Bastion # First you need to get Bastion in your local computer before you can install it in Heroku. Run the following command to clone Bastion into your computer: 1 2 git clone -b stable -q --depth 1 https://github.com/TheBastionBot/Bastion.git cd Bastion You also need to create an app in Heroku where you will install Bastion. Run the following command to create an app in Heroku: 1 heroku create Now you can install Bastion in Heroku. Run the following command to deploy Bastion to Heroku: 1 git push heroku master Step 3: Configure Bastion # In your computer, copy the config_example.json and credentials_example.json files in the settings directory of Bastion and rename the copies to config.json and credentials.json , respectively. Edit the credentials.json file to add/update your credentials like Discord IDs, token, API Keys, etc., and the config.json file to add/update initial settings of Bastion. Make whatever changes you want and save them. Now you need to copy these files to Heroku. Run the following commands to push these files to Heroku: 1 2 3 git add -f settings/config.json settings/credentials.json git commit -m \"Initial Bastion Configuration\" git push heroku master Step 4: Run Bastion # Once you have pushed Bastion\u2019s configuration files to Heroku, Bastion will automatically start in a few seconds. Note If you want to view the logs from Heroku, run the following command: heroku logs --tail It will stream the logs from Heroku to your terminal. You can use Ctrl + C to stop streaming it. Show your love! If you like Bastion, please consider giving it a on GitHub .","title":"Install on Heroku"},{"location":"install-heroku/#installing-bastion-in-heroku","text":"Warning Bastion stores its data in files on disk. Heroku\u2019s Cedar stack has an ephemeral filesystem. Bastion will work with Heroku, but the data will be cleared periodically by Heroku. If you were to use Bastion on Heroku, you would lose your entire data at least once every 24 hours.","title":"Installing Bastion in Heroku"},{"location":"install-heroku/#prerequisites","text":"Before you can install Bastion in Heroku, you need these in your computer. Install them if you don\u2019t already have it. Git Heroku CLI","title":"Prerequisites"},{"location":"install-heroku/#step-1-set-up-heroku","text":"Go to Heroku and create a new account (or login, if you already have an account). Open the Command Prompt (Windows) or Terminal (Linux/macOS) and run the following command: 1 heroku login Enter your Heroku credentials as prompted and you will be logged in to Heroku.","title":"Step 1: Set up Heroku"},{"location":"install-heroku/#step-2-install-bastion","text":"First you need to get Bastion in your local computer before you can install it in Heroku. Run the following command to clone Bastion into your computer: 1 2 git clone -b stable -q --depth 1 https://github.com/TheBastionBot/Bastion.git cd Bastion You also need to create an app in Heroku where you will install Bastion. Run the following command to create an app in Heroku: 1 heroku create Now you can install Bastion in Heroku. Run the following command to deploy Bastion to Heroku: 1 git push heroku master","title":"Step 2: Install Bastion"},{"location":"install-heroku/#step-3-configure-bastion","text":"In your computer, copy the config_example.json and credentials_example.json files in the settings directory of Bastion and rename the copies to config.json and credentials.json , respectively. Edit the credentials.json file to add/update your credentials like Discord IDs, token, API Keys, etc., and the config.json file to add/update initial settings of Bastion. Make whatever changes you want and save them. Now you need to copy these files to Heroku. Run the following commands to push these files to Heroku: 1 2 3 git add -f settings/config.json settings/credentials.json git commit -m \"Initial Bastion Configuration\" git push heroku master","title":"Step 3: Configure Bastion"},{"location":"install-heroku/#step-4-run-bastion","text":"Once you have pushed Bastion\u2019s configuration files to Heroku, Bastion will automatically start in a few seconds. Note If you want to view the logs from Heroku, run the following command: heroku logs --tail It will stream the logs from Heroku to your terminal. You can use Ctrl + C to stop streaming it. Show your love! If you like Bastion, please consider giving it a on GitHub .","title":"Step 4: Run Bastion"},{"location":"install-linux/","text":"Bastion Installation on GNU/Linux # If you are going to install Bastion in any other operating system besides Linux, you can skip this step and visit to the appropriate page for the specific guides on Windows or macOS . Or if you are an advanced user and want to know what\u2019s going on with the installer or want to go through the installation step by step, manually (trust me I understand), we have a manual installation guide , made just for you! Want to run Bastion 24x7? If you want Bastion to serve 24/7 without having to hosting it on your PC and want to keep it cheap, reliable and convenient as possible, you can install Bastion, using the following guide, on a DigitalOcean Linux VPS using this link (using this link will be supporting The Bastion Bot project and will give you $10 for free to start with DigitalOcean). Download the installer # Run the following command to download the Bastion Bot installer that\u2019ll help you install Bastion smooth and easy: 1 wget https://raw.githubusercontent.com/TheBastionBot/Bastion-Scripts/master/BastionInstaller.sh && chmod +x BastionInstaller.sh Proceed with the installation # Now that you\u2019ve downloaded the installer, it will automatically download and install everything you\u2019ll need to run Bastion. To start the installation, run the following command: 1 ./BastionInstaller.sh Wait for a few moments for the installer to finish installing. If everything was successful, it\u2019ll let you know that the installation was successfully completed and Bastion is ready to boot up. Now, you should have a new folder named Bastion in your $HOME ( ~ ) directory. Configure Bastion # Here comes the last (but not the least) step, configuring Bastion, before it\u2019s first run. Go to the settings directory (folder), that\u2019s inside the Bastion folder. You\u2019ll see two files here, credentials.json and config.json . Edit the credentials.json and config.json files and make the changes as required and save the file. Note If you\u2019re on Windows, please don\u2019t use the Notepad application that comes with Windows by default, because Notepad doesn\u2019t support the LF line endings and breaks the file. At least, use a code editor like Notepad++ or Atom . Get Bastion running # You get a bastion.sh script file that makes it easy to run Bastion without any hassle, among other things. To start Bastion, run the following command: 1 2 cd ~/Bastion # Changes the current directory to the `Bastion`, if you aren't already there. ./bastion.sh --start # Starts Bastion Pro Tip The bastion.sh script can do a whole lot of other things besides just helping you with running & updating Bastion. Want to find out what else can it do? Just run the following command to know more: ./bastion.sh","title":"Install on Linux"},{"location":"install-linux/#bastion-installation-on-gnulinux","text":"If you are going to install Bastion in any other operating system besides Linux, you can skip this step and visit to the appropriate page for the specific guides on Windows or macOS . Or if you are an advanced user and want to know what\u2019s going on with the installer or want to go through the installation step by step, manually (trust me I understand), we have a manual installation guide , made just for you! Want to run Bastion 24x7? If you want Bastion to serve 24/7 without having to hosting it on your PC and want to keep it cheap, reliable and convenient as possible, you can install Bastion, using the following guide, on a DigitalOcean Linux VPS using this link (using this link will be supporting The Bastion Bot project and will give you $10 for free to start with DigitalOcean).","title":"Bastion Installation on GNU/Linux"},{"location":"install-linux/#download-the-installer","text":"Run the following command to download the Bastion Bot installer that\u2019ll help you install Bastion smooth and easy: 1 wget https://raw.githubusercontent.com/TheBastionBot/Bastion-Scripts/master/BastionInstaller.sh && chmod +x BastionInstaller.sh","title":"Download the installer"},{"location":"install-linux/#proceed-with-the-installation","text":"Now that you\u2019ve downloaded the installer, it will automatically download and install everything you\u2019ll need to run Bastion. To start the installation, run the following command: 1 ./BastionInstaller.sh Wait for a few moments for the installer to finish installing. If everything was successful, it\u2019ll let you know that the installation was successfully completed and Bastion is ready to boot up. Now, you should have a new folder named Bastion in your $HOME ( ~ ) directory.","title":"Proceed with the installation"},{"location":"install-linux/#configure-bastion","text":"Here comes the last (but not the least) step, configuring Bastion, before it\u2019s first run. Go to the settings directory (folder), that\u2019s inside the Bastion folder. You\u2019ll see two files here, credentials.json and config.json . Edit the credentials.json and config.json files and make the changes as required and save the file. Note If you\u2019re on Windows, please don\u2019t use the Notepad application that comes with Windows by default, because Notepad doesn\u2019t support the LF line endings and breaks the file. At least, use a code editor like Notepad++ or Atom .","title":"Configure Bastion"},{"location":"install-linux/#get-bastion-running","text":"You get a bastion.sh script file that makes it easy to run Bastion without any hassle, among other things. To start Bastion, run the following command: 1 2 cd ~/Bastion # Changes the current directory to the `Bastion`, if you aren't already there. ./bastion.sh --start # Starts Bastion Pro Tip The bastion.sh script can do a whole lot of other things besides just helping you with running & updating Bastion. Want to find out what else can it do? Just run the following command to know more: ./bastion.sh","title":"Get Bastion running"},{"location":"install-macos/","text":"Bastion Installation on macOS # If you are going to install Bastion in any other operating system besides macOS, you can skip this step and visit to the appropriate page for the specific guides on Windows or Linux . Or if you are an advanced user and want to know what\u2019s going on with the installer or want to go through the installation step by step, manually (trust me I understand), we have a manual installation guide , made just for you! Want to run Bastion 24x7? If you want Bastion to serve 24/7 without having to hosting it on your PC and want to keep it cheap, reliable and convenient as possible, you can install Bastion, using the linux guide , on a DigitalOcean Linux VPS using this link (using this link will be supporting The Bastion Bot project and will give you $10 for free to start with DigitalOcean). Download the installer # Run the following command to download the Bastion Bot installer that\u2019ll help you install Bastion smooth and easy: 1 curl -sL https://raw.githubusercontent.com/TheBastionBot/Bastion-Scripts/master/BastionInstaller_macOS.sh -o BastionInstaller.sh && chmod +x BastionInstaller.sh Proceed with the installation # Now that you\u2019ve downloaded the installer, it will automatically download and install everything you\u2019ll need to run Bastion. To start the installation, run the following command: 1 ./BastionInstaller.sh Wait for a few moments for the installer to finish installing. If everything was successful, it\u2019ll let you know that the installation was successfully completed and Bastion is ready to boot up. Now, you should have a new folder named Bastion in your $HOME ( ~ ) directory. Configure Bastion # Here comes the last (but not the least) step, configuring Bastion, before it\u2019s first run. Go to the settings directory (folder), that\u2019s inside the Bastion folder. You\u2019ll see two files here, credentials.json and config.json . Edit the credentials.json and config.json files and make the changes as required and save the file. Get Bastion running # You get a bastion.sh script file that makes it easy to run Bastion without any hassle, among other things. To start Bastion, run the following command: 1 2 cd ~/Bastion # Changes the current directory to the `Bastion`, if you aren't already there. ./bastion.sh --start # Starts Bastion Pro Tip The bastion.sh script can do a whole lot of other things besides just helping you with running & updating Bastion. Want to find out what else can it do? Just run the following command to know more: ./bastion.sh","title":"Install on macOS"},{"location":"install-macos/#bastion-installation-on-macos","text":"If you are going to install Bastion in any other operating system besides macOS, you can skip this step and visit to the appropriate page for the specific guides on Windows or Linux . Or if you are an advanced user and want to know what\u2019s going on with the installer or want to go through the installation step by step, manually (trust me I understand), we have a manual installation guide , made just for you! Want to run Bastion 24x7? If you want Bastion to serve 24/7 without having to hosting it on your PC and want to keep it cheap, reliable and convenient as possible, you can install Bastion, using the linux guide , on a DigitalOcean Linux VPS using this link (using this link will be supporting The Bastion Bot project and will give you $10 for free to start with DigitalOcean).","title":"Bastion Installation on macOS"},{"location":"install-macos/#download-the-installer","text":"Run the following command to download the Bastion Bot installer that\u2019ll help you install Bastion smooth and easy: 1 curl -sL https://raw.githubusercontent.com/TheBastionBot/Bastion-Scripts/master/BastionInstaller_macOS.sh -o BastionInstaller.sh && chmod +x BastionInstaller.sh","title":"Download the installer"},{"location":"install-macos/#proceed-with-the-installation","text":"Now that you\u2019ve downloaded the installer, it will automatically download and install everything you\u2019ll need to run Bastion. To start the installation, run the following command: 1 ./BastionInstaller.sh Wait for a few moments for the installer to finish installing. If everything was successful, it\u2019ll let you know that the installation was successfully completed and Bastion is ready to boot up. Now, you should have a new folder named Bastion in your $HOME ( ~ ) directory.","title":"Proceed with the installation"},{"location":"install-macos/#configure-bastion","text":"Here comes the last (but not the least) step, configuring Bastion, before it\u2019s first run. Go to the settings directory (folder), that\u2019s inside the Bastion folder. You\u2019ll see two files here, credentials.json and config.json . Edit the credentials.json and config.json files and make the changes as required and save the file.","title":"Configure Bastion"},{"location":"install-macos/#get-bastion-running","text":"You get a bastion.sh script file that makes it easy to run Bastion without any hassle, among other things. To start Bastion, run the following command: 1 2 cd ~/Bastion # Changes the current directory to the `Bastion`, if you aren't already there. ./bastion.sh --start # Starts Bastion Pro Tip The bastion.sh script can do a whole lot of other things besides just helping you with running & updating Bastion. Want to find out what else can it do? Just run the following command to know more: ./bastion.sh","title":"Get Bastion running"},{"location":"install-manual/","text":"Installing Bastion Manually # You can skip this step if you\u2019ve already installed Bastion using the installer from Windows , macOS , or Linux installation guide. This guide is for advanced users only. Want to run Bastion 24x7? If you want Bastion to serve 24/7 without having to hosting it on your PC and want to keep it cheap, reliable and convenient as possible, you can install Bastion, using the following guide, on a DigitalOcean Linux VPS using this link (using this link will be supporting The Bastion Bot project and will give you $10 for free to start with DigitalOcean). Install Package Manager # On GNU/Linux # Various distributions of GNU/Linux already comes with an amazing package manager. So, if you\u2019re on linux, you can go to the next step . On macOS # macOS is a very powerful operating system, but unlike GNU/Linux, it doesn\u2019t come with a package manager. So, we need to install a package manager, called Homebrew , which will make it super easy to install various applications. To install Homebrew, follow these simple steps: Open a Terminal prompt. Run the following command: 1 /usr/bin/ruby -e \" $( curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install ) \" On Windows # Windows doesn\u2019t have a package manager like we have on GNU/Linux operating systems, so we need to install a package manager, called Chocolatey , which will make it super easy to install various applications. To install Chocolatey, follow these simple steps: Start a Command Prompt as an Administrator . Run the following command: 1 @\"%SystemRoot%\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command \"iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))\" && SET \"PATH=%PATH%;%ALLUSERSPROFILE%\\chocolatey\\bin\" Install Node.js # Node.js is what Bastion is built upon. Which makes it extremely important to run Bastion. Read this guide on installing Node.js for your operating system and install the 8.9.1 LTS version of Node.js. Install Git # Git is a source code management software that is needed to track changes in Bastion\u2019s source and download/update your local instance of Bastion if/when needed. If you don\u2019t understand any of that, don\u2019t worry, you don\u2019t need to, just visit the Git downloads page to download and install Git for your operating system. Install Dependencies # Bastion depends on various other software to install and run, you will need to install those before you can start installing Bastion. On Linux # Debian and Ubuntu based Linux distributions 1 2 sudo apt-get install build-essential # build tools sudo apt-get install wget curl screen python # other dependencies Enterprise Linux and Fedora Including Red Hat \u00ae Enterprise Linux \u00ae / RHEL , CentOS and Fedora . 1 2 3 4 5 6 7 8 9 # If your distribution has yum package manager sudo yum groupinstall \"Development Tools\" # build tools sudo yum install wget curl screen python # other dependencies npm install -g ffmpeg-binaries # Or if your distribution has dnf package manager sudo dnf groupinstall \"Development Tools\" # build tools sudo yum install wget curl screen python # other dependencies npm install -g ffmpeg-binaries On macOS # 1 2 sudo xcode-select --install # xcode-command line tools brew install wget curl screen python ffmpeg # other dependencies On Windows # 1 2 npm install -g windows-build-tools choco install ffmpeg Download Bastion # Now that you\u2019ve done all the prerequisites, it\u2019s time to download Bastion. Here\u2019s how you can do that: Open a Terminal (Command Prompt, if you\u2019re on Windows). Download (clone) Bastion\u2019s files from GitHub: 1 2 3 4 5 6 # If you're on GNU/Linux cd ~ && git clone -b stable -q --depth 1 https://github.com/TheBastionBot/Bastion.git # If you're on macOS cd \"/Users/ $USER \" && git clone -b stable -q --depth 1 https://github.com/TheBastionBot/Bastion.git # If you're on Windows cd %USERPROFILE% \\D esktop && git clone -b stable -q --depth 1 https://github.com/TheBastionBot/Bastion.git Install Bastion Dependencies # After it has downloaded (cloned) Bastion\u2019s files, it\u2019s time to install the local dependencies required by Bastion. To do that, simply run in the Terminal (Command Prompt, if you\u2019re on Windows): 1 npm install --only = production Configure Bastion # Here comes the last (but not the least) step, configuring Bastion, before it\u2019s first run. Go to the settings directory (folder), that\u2019s inside the Bastion folder. You\u2019ll see two files here, credentials_example.json and config_example.json . Make duplicate copies of these two files and rename the duplicates to credentials.json and config.json respectively. Edit the credentials.json and config.json files and make the changes as required and save the file. Note If you\u2019re on Windows, please don\u2019t use the Notepad application that comes with Windows by default, because Notepad doesn\u2019t support the LF line endings and breaks the file. At least, use a code editor like Notepad++ or Atom . Get Bastion running # On GNU/Linux or macOS # You get a bastion.sh script file that makes it easy to run Bastion without any hassle, among other things. To start Bastion, run the following command: 1 2 cd ~/Bastion # Changes the current directory to the `Bastion`, if you aren't already there. ./bastion.sh --start # Starts Bastion Pro Tip The bastion.sh script can do a whole lot of other things besides just helping you with running & updating Bastion. Want to find out what else can it do? Just run the following command to know more: ./bastion.sh On Windows # You get a run.cmd script file that makes it easy to run Bastion without any hassle. To start Bastion, Double-Click the run.cmd file. Now, you will see the status of Bastion in a Command Prompt (CMD) window. If you want to terminate & stop Bastion, just close the Command Prompt window.","title":"Install Manually"},{"location":"install-manual/#installing-bastion-manually","text":"You can skip this step if you\u2019ve already installed Bastion using the installer from Windows , macOS , or Linux installation guide. This guide is for advanced users only. Want to run Bastion 24x7? If you want Bastion to serve 24/7 without having to hosting it on your PC and want to keep it cheap, reliable and convenient as possible, you can install Bastion, using the following guide, on a DigitalOcean Linux VPS using this link (using this link will be supporting The Bastion Bot project and will give you $10 for free to start with DigitalOcean).","title":"Installing Bastion Manually"},{"location":"install-manual/#install-package-manager","text":"","title":"Install Package Manager"},{"location":"install-manual/#on-gnulinux","text":"Various distributions of GNU/Linux already comes with an amazing package manager. So, if you\u2019re on linux, you can go to the next step .","title":"On GNU/Linux"},{"location":"install-manual/#on-macos","text":"macOS is a very powerful operating system, but unlike GNU/Linux, it doesn\u2019t come with a package manager. So, we need to install a package manager, called Homebrew , which will make it super easy to install various applications. To install Homebrew, follow these simple steps: Open a Terminal prompt. Run the following command: 1 /usr/bin/ruby -e \" $( curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install ) \"","title":"On macOS"},{"location":"install-manual/#on-windows","text":"Windows doesn\u2019t have a package manager like we have on GNU/Linux operating systems, so we need to install a package manager, called Chocolatey , which will make it super easy to install various applications. To install Chocolatey, follow these simple steps: Start a Command Prompt as an Administrator . Run the following command: 1 @\"%SystemRoot%\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command \"iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))\" && SET \"PATH=%PATH%;%ALLUSERSPROFILE%\\chocolatey\\bin\"","title":"On Windows"},{"location":"install-manual/#install-nodejs","text":"Node.js is what Bastion is built upon. Which makes it extremely important to run Bastion. Read this guide on installing Node.js for your operating system and install the 8.9.1 LTS version of Node.js.","title":"Install Node.js"},{"location":"install-manual/#install-git","text":"Git is a source code management software that is needed to track changes in Bastion\u2019s source and download/update your local instance of Bastion if/when needed. If you don\u2019t understand any of that, don\u2019t worry, you don\u2019t need to, just visit the Git downloads page to download and install Git for your operating system.","title":"Install Git"},{"location":"install-manual/#install-dependencies","text":"Bastion depends on various other software to install and run, you will need to install those before you can start installing Bastion.","title":"Install Dependencies"},{"location":"install-manual/#on-linux","text":"Debian and Ubuntu based Linux distributions 1 2 sudo apt-get install build-essential # build tools sudo apt-get install wget curl screen python # other dependencies Enterprise Linux and Fedora Including Red Hat \u00ae Enterprise Linux \u00ae / RHEL , CentOS and Fedora . 1 2 3 4 5 6 7 8 9 # If your distribution has yum package manager sudo yum groupinstall \"Development Tools\" # build tools sudo yum install wget curl screen python # other dependencies npm install -g ffmpeg-binaries # Or if your distribution has dnf package manager sudo dnf groupinstall \"Development Tools\" # build tools sudo yum install wget curl screen python # other dependencies npm install -g ffmpeg-binaries","title":"On Linux"},{"location":"install-manual/#on-macos_1","text":"1 2 sudo xcode-select --install # xcode-command line tools brew install wget curl screen python ffmpeg # other dependencies","title":"On macOS"},{"location":"install-manual/#on-windows_1","text":"1 2 npm install -g windows-build-tools choco install ffmpeg","title":"On Windows"},{"location":"install-manual/#download-bastion","text":"Now that you\u2019ve done all the prerequisites, it\u2019s time to download Bastion. Here\u2019s how you can do that: Open a Terminal (Command Prompt, if you\u2019re on Windows). Download (clone) Bastion\u2019s files from GitHub: 1 2 3 4 5 6 # If you're on GNU/Linux cd ~ && git clone -b stable -q --depth 1 https://github.com/TheBastionBot/Bastion.git # If you're on macOS cd \"/Users/ $USER \" && git clone -b stable -q --depth 1 https://github.com/TheBastionBot/Bastion.git # If you're on Windows cd %USERPROFILE% \\D esktop && git clone -b stable -q --depth 1 https://github.com/TheBastionBot/Bastion.git","title":"Download Bastion"},{"location":"install-manual/#install-bastion-dependencies","text":"After it has downloaded (cloned) Bastion\u2019s files, it\u2019s time to install the local dependencies required by Bastion. To do that, simply run in the Terminal (Command Prompt, if you\u2019re on Windows): 1 npm install --only = production","title":"Install Bastion Dependencies"},{"location":"install-manual/#configure-bastion","text":"Here comes the last (but not the least) step, configuring Bastion, before it\u2019s first run. Go to the settings directory (folder), that\u2019s inside the Bastion folder. You\u2019ll see two files here, credentials_example.json and config_example.json . Make duplicate copies of these two files and rename the duplicates to credentials.json and config.json respectively. Edit the credentials.json and config.json files and make the changes as required and save the file. Note If you\u2019re on Windows, please don\u2019t use the Notepad application that comes with Windows by default, because Notepad doesn\u2019t support the LF line endings and breaks the file. At least, use a code editor like Notepad++ or Atom .","title":"Configure Bastion"},{"location":"install-manual/#get-bastion-running","text":"","title":"Get Bastion running"},{"location":"install-manual/#on-gnulinux-or-macos","text":"You get a bastion.sh script file that makes it easy to run Bastion without any hassle, among other things. To start Bastion, run the following command: 1 2 cd ~/Bastion # Changes the current directory to the `Bastion`, if you aren't already there. ./bastion.sh --start # Starts Bastion Pro Tip The bastion.sh script can do a whole lot of other things besides just helping you with running & updating Bastion. Want to find out what else can it do? Just run the following command to know more: ./bastion.sh","title":"On GNU/Linux or macOS"},{"location":"install-manual/#on-windows_2","text":"You get a run.cmd script file that makes it easy to run Bastion without any hassle. To start Bastion, Double-Click the run.cmd file. Now, you will see the status of Bastion in a Command Prompt (CMD) window. If you want to terminate & stop Bastion, just close the Command Prompt window.","title":"On Windows"},{"location":"install-win-wsl/","text":"Bastion Installation on Windows Subsystem for Linux # If you are going to install Bastion in any other operating system besides Windows, you can skip this step and visit to the appropriate page for the specific guides on macOS or Linux . Or if you are an advanced user and want to know what\u2019s going on with the installer or want to go through the installation step by step, manually (trust me I understand), we have a manual installation guide , made just for you! Want to run Bastion 24x7? If you want Bastion to serve 24/7 without having to hosting it on your PC and want to keep it cheap, reliable and convenient as possible, you can install Bastion, using the linux guide , on a DigitalOcean Linux VPS using this link (using this link will be supporting The Bastion Bot project and will give you $10 for free to start with DigitalOcean). What is Windows Subsystem for Linux? # The Windows Subsystem for Linux lets developers run Linux environments \u2013 including most command-line tools, utilities, and applications \u2013 directly on Windows, unmodified, without the overhead of a virtual machine. You can: Choose your favorite Linux distributions from the Windows Store. Run common command-line utilities such as grep, sed, awk, etc. Run Bash shell scripts and Linux command-line applications including: Tools: vim, emacs, tmux Languages: JavaScript/Node.js, Ruby, Python, C/C++, C# & F#, Rust, Go, etc. Services: sshd, MySQL, Apache, lighttpd Install additional Linux tools using the distribution\u2019s built in package manager (apt-get, for example). Invoke Windows applications from the Linux console. Invoke Linux applications on Windows. Install Windows Subsystem for Linux # If you\u2019re on Windows 10 , follow this guide from Microsoft to install Windows Subsystem for Linux: 1 https://docs.microsoft.com/en-us/windows/wsl/install-win10 Or if you\u2019re on Windows Server , follow this guide from Microsoft to install Windows Subsystem for Linux: 1 https://docs.microsoft.com/en-us/windows/wsl/install-on-server Install Bastion # Now that you\u2019ve installed Windows Subsystem for Linux, you\u2019ve a Linux environment inside Windows. All you need to do now is follow the Linux guide on installing Bastion.","title":"Install on Windows (WSL)"},{"location":"install-win-wsl/#bastion-installation-on-windows-subsystem-for-linux","text":"If you are going to install Bastion in any other operating system besides Windows, you can skip this step and visit to the appropriate page for the specific guides on macOS or Linux . Or if you are an advanced user and want to know what\u2019s going on with the installer or want to go through the installation step by step, manually (trust me I understand), we have a manual installation guide , made just for you! Want to run Bastion 24x7? If you want Bastion to serve 24/7 without having to hosting it on your PC and want to keep it cheap, reliable and convenient as possible, you can install Bastion, using the linux guide , on a DigitalOcean Linux VPS using this link (using this link will be supporting The Bastion Bot project and will give you $10 for free to start with DigitalOcean).","title":"Bastion Installation on Windows Subsystem for Linux"},{"location":"install-win-wsl/#what-is-windows-subsystem-for-linux","text":"The Windows Subsystem for Linux lets developers run Linux environments \u2013 including most command-line tools, utilities, and applications \u2013 directly on Windows, unmodified, without the overhead of a virtual machine. You can: Choose your favorite Linux distributions from the Windows Store. Run common command-line utilities such as grep, sed, awk, etc. Run Bash shell scripts and Linux command-line applications including: Tools: vim, emacs, tmux Languages: JavaScript/Node.js, Ruby, Python, C/C++, C# & F#, Rust, Go, etc. Services: sshd, MySQL, Apache, lighttpd Install additional Linux tools using the distribution\u2019s built in package manager (apt-get, for example). Invoke Windows applications from the Linux console. Invoke Linux applications on Windows.","title":"What is Windows Subsystem for Linux?"},{"location":"install-win-wsl/#install-windows-subsystem-for-linux","text":"If you\u2019re on Windows 10 , follow this guide from Microsoft to install Windows Subsystem for Linux: 1 https://docs.microsoft.com/en-us/windows/wsl/install-win10 Or if you\u2019re on Windows Server , follow this guide from Microsoft to install Windows Subsystem for Linux: 1 https://docs.microsoft.com/en-us/windows/wsl/install-on-server","title":"Install Windows Subsystem for Linux"},{"location":"install-win-wsl/#install-bastion","text":"Now that you\u2019ve installed Windows Subsystem for Linux, you\u2019ve a Linux environment inside Windows. All you need to do now is follow the Linux guide on installing Bastion.","title":"Install Bastion"},{"location":"install-win/","text":"Bastion Installation on Windows # If you are going to install Bastion in any other operating system besides Windows, you can skip this step and visit to the appropriate page for the specific guides on macOS or Linux . Or if you are an advanced user and want to know what\u2019s going on with the installer or want to go through the installation step by step, manually (trust me I understand), we have a manual installation guide , made just for you! Want to run Bastion 24x7? If you want Bastion to serve 24/7 without having to hosting it on your PC and want to keep it cheap, reliable and convenient as possible, you can install Bastion, using the linux guide , on a DigitalOcean Linux VPS using this link (using this link will be supporting The Bastion Bot project and will give you $10 for free to start with DigitalOcean). Download the installer # Right Click here and Click Save Link As\u2026 and Save the file as BastionInstaller.cmd (Bastion Installer for Windows). Proceed with the installation # Now that you\u2019ve downloaded the installer, it will automatically download and install everything you\u2019ll need to run Bastion. To start the installation, Right-Click the downloaded file and Click Run as Administrator . Wait for a few moments for the installer to finish installing. If everything was successful, it\u2019ll let you know that the installation was successfully completed and Bastion is ready to boot up. Now, you should have a new folder named Bastion in your User Directory ( %USERPROFILE% or C:\\Users\\<User Name> ). Configure Bastion # Here comes the last (but not the least) step, configuring Bastion, before it\u2019s first run. Go to the settings directory (folder), that\u2019s inside the Bastion folder. You\u2019ll see two files here, credentials.json and config.json . Edit the credentials.json and config.json files and make the changes as required and save the file. Note Please don\u2019t use the Notepad application that comes with Windows by default, because Notepad doesn\u2019t support the LF line endings and breaks the file. At least, use a code editor like Notepad++ or Atom . Get Bastion running # You get a run.cmd script file that makes it easy to run Bastion without any hassle. To start Bastion, Double-Click the run.cmd file. Now, you will see the status of Bastion in a Command Prompt (CMD) window. If you want to terminate & stop Bastion, just close the Command Prompt window.","title":"Install on Windows"},{"location":"install-win/#bastion-installation-on-windows","text":"If you are going to install Bastion in any other operating system besides Windows, you can skip this step and visit to the appropriate page for the specific guides on macOS or Linux . Or if you are an advanced user and want to know what\u2019s going on with the installer or want to go through the installation step by step, manually (trust me I understand), we have a manual installation guide , made just for you! Want to run Bastion 24x7? If you want Bastion to serve 24/7 without having to hosting it on your PC and want to keep it cheap, reliable and convenient as possible, you can install Bastion, using the linux guide , on a DigitalOcean Linux VPS using this link (using this link will be supporting The Bastion Bot project and will give you $10 for free to start with DigitalOcean).","title":"Bastion Installation on Windows"},{"location":"install-win/#download-the-installer","text":"Right Click here and Click Save Link As\u2026 and Save the file as BastionInstaller.cmd (Bastion Installer for Windows).","title":"Download the installer"},{"location":"install-win/#proceed-with-the-installation","text":"Now that you\u2019ve downloaded the installer, it will automatically download and install everything you\u2019ll need to run Bastion. To start the installation, Right-Click the downloaded file and Click Run as Administrator . Wait for a few moments for the installer to finish installing. If everything was successful, it\u2019ll let you know that the installation was successfully completed and Bastion is ready to boot up. Now, you should have a new folder named Bastion in your User Directory ( %USERPROFILE% or C:\\Users\\<User Name> ).","title":"Proceed with the installation"},{"location":"install-win/#configure-bastion","text":"Here comes the last (but not the least) step, configuring Bastion, before it\u2019s first run. Go to the settings directory (folder), that\u2019s inside the Bastion folder. You\u2019ll see two files here, credentials.json and config.json . Edit the credentials.json and config.json files and make the changes as required and save the file. Note Please don\u2019t use the Notepad application that comes with Windows by default, because Notepad doesn\u2019t support the LF line endings and breaks the file. At least, use a code editor like Notepad++ or Atom .","title":"Configure Bastion"},{"location":"install-win/#get-bastion-running","text":"You get a run.cmd script file that makes it easy to run Bastion without any hassle. To start Bastion, Double-Click the run.cmd file. Now, you will see the status of Bastion in a Command Prompt (CMD) window. If you want to terminate & stop Bastion, just close the Command Prompt window.","title":"Get Bastion running"},{"location":"update/","text":"Updating Bastion # When new version of Bastion is released, it brings new features, improvements and bug fixes. So, you should always try to have the latest version of Bastion, so you can experience it\u2019s all new features and improvements. To know when new releases are done, have an eye out on the #announcements channel of The Bastion Bot: Discord Server . Note Before updating your Bastion Bot, shutdown your bot using the shutdown command in Discord. Updating Bastion on Linux/macOS # Go to your Bastion directory. If you haven\u2019t changed the default installation directory and path, run the following command: 1 cd ~/Bastion Now that you\u2019re in the directory where Bastion is installed, running the following command will update Bastion and all of it\u2019s dependencies to the latest version: 1 ./bastion.sh --update Wait for a few moments for the updater to finish updating. After the updater has updated Bastion, it\u2019ll let you know that the update was successfully completed and Bastion is ready to boot up. Now you can start Bastion, as usual, using the following command: 1 ./bastion.sh --start Updating Bastion on Windows # Go to your Bastion directory (It\u2019s in your desktop, If you haven\u2019t changed the default installation directory and path). Right-Click on the update.cmd file and Click Run as Administrator . Wait for a few moments for the updater to finish updating. After the updater has updated Bastion, it\u2019ll let you know that the update was successfully completed and Bastion is ready to boot up. Now you can start Bastion, as usual, by Double-Clicking the run.cmd file.","title":"Update"},{"location":"update/#updating-bastion","text":"When new version of Bastion is released, it brings new features, improvements and bug fixes. So, you should always try to have the latest version of Bastion, so you can experience it\u2019s all new features and improvements. To know when new releases are done, have an eye out on the #announcements channel of The Bastion Bot: Discord Server . Note Before updating your Bastion Bot, shutdown your bot using the shutdown command in Discord.","title":"Updating Bastion"},{"location":"update/#updating-bastion-on-linuxmacos","text":"Go to your Bastion directory. If you haven\u2019t changed the default installation directory and path, run the following command: 1 cd ~/Bastion Now that you\u2019re in the directory where Bastion is installed, running the following command will update Bastion and all of it\u2019s dependencies to the latest version: 1 ./bastion.sh --update Wait for a few moments for the updater to finish updating. After the updater has updated Bastion, it\u2019ll let you know that the update was successfully completed and Bastion is ready to boot up. Now you can start Bastion, as usual, using the following command: 1 ./bastion.sh --start","title":"Updating Bastion on Linux/macOS"},{"location":"update/#updating-bastion-on-windows","text":"Go to your Bastion directory (It\u2019s in your desktop, If you haven\u2019t changed the default installation directory and path). Right-Click on the update.cmd file and Click Run as Administrator . Wait for a few moments for the updater to finish updating. After the updater has updated Bastion, it\u2019ll let you know that the update was successfully completed and Bastion is ready to boot up. Now you can start Bastion, as usual, by Double-Clicking the run.cmd file.","title":"Updating Bastion on Windows"}]}